version: "3"
services:
  db:
    platform: linux/x86_64
    image: mysql:5.7
    networks: [backend]
    volumes:
      - mysql:/var/lib/mysql
      - ./priv:/priv
    ports:
      - 3306
    command: mysqld --sql-mode="" --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: test
  app:
    build: .
    tty: true
    stdin_open: true
    networks: [backend]
    depends_on: [db]
    ports: ["8080:8080"]
    volumes:
      - .:/go/src/app
    environment:
      AWS_ACCESS_KEY_ID: minio_user
      AWS_SECRET_ACCESS_KEY: minio_password
      ENV: local
  minio:
    image: minio/minio:latest
    networks: [backend]
    volumes:
      - minio:/export
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    image: minio/mc:latest
    networks: [backend]
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 minio_user minio_password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/test;
      /usr/bin/mc policy set public myminio/test;
      exit 0;
      "

networks:
  backend:
volumes:
  mysql:
  minio:
